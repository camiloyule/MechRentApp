// <auto-generated />
using MechRent.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MechRent.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240719171029_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MechRent.Core.Models.EstimacionMaquina", b =>
                {
                    b.Property<int>("obraId")
                        .HasColumnType("int");

                    b.Property<int>("maquinaId")
                        .HasColumnType("int");

                    b.Property<int>("horas")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.HasKey("obraId", "maquinaId");

                    b.HasIndex("maquinaId");

                    b.ToTable("EstimacionMaquinas");
                });

            modelBuilder.Entity("MechRent.Core.Models.Maquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("frecuenciaMantenimiento")
                        .HasColumnType("int");

                    b.Property<string>("nombreMaquina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precioHora")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Maquinas");
                });

            modelBuilder.Entity("MechRent.Core.Models.ObraPublica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("departamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreObra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ObrasPublicas");
                });

            modelBuilder.Entity("MechRent.Core.Models.EstimacionMaquina", b =>
                {
                    b.HasOne("MechRent.Core.Models.Maquina", "maquina")
                        .WithMany()
                        .HasForeignKey("maquinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MechRent.Core.Models.ObraPublica", "obraPublica")
                        .WithMany("estimacionMaquinas")
                        .HasForeignKey("obraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("maquina");

                    b.Navigation("obraPublica");
                });

            modelBuilder.Entity("MechRent.Core.Models.ObraPublica", b =>
                {
                    b.Navigation("estimacionMaquinas");
                });
#pragma warning restore 612, 618
        }
    }
}
